<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name>Get Resume Analysis</action_name>
        <active>true</active>
        <client>false</client>
        <client_script_v2><![CDATA[function onClick(g_form) {

}]]></client_script_v2>
        <comments/>
        <condition/>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_button_v2>false</form_button_v2>
        <form_context_menu>false</form_context_menu>
        <form_link>false</form_link>
        <form_menu_button_v2>false</form_menu_button_v2>
        <form_style>primary</form_style>
        <format_for_configurable_workspace>false</format_for_configurable_workspace>
        <hint>Submit your resume for evaluation</hint>
        <isolate_script>false</isolate_script>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <messages/>
        <name>Get Resume Analysis</name>
        <onclick/>
        <order>-201</order>
        <script><![CDATA[const sysId = current.getValue('sys_id'); // Replace with the Sys ID of the record
gs.info("sysId =======>>>>> " + sysId);
const resume_id = current.getValue("resume");
const attachment = getAttachment(resume_id);
sendFileToAWS(attachment);
action.setRedirectURL(current);

function getAttachment(sysId) {
    gs.info('Getting attachment for sys_id: ' + sysId); // Log the sys_id being queried

    const attachmentGR = new GlideRecord('sys_attachment');
    if (attachmentGR.get(sysId)) {
        gs.info(`Attachment found on Resume ${current.getValue("number")}: ${attachmentGR.file_name}`);

		const extensionRegExp = /.(jpe*g|png|pdf)/gi;

        const sysAttachment = new GlideSysAttachment();
        const attachmentBase64 = sysAttachment.getContentBase64(attachmentGR); // Get the content base64
		const [filename, extension] = attachmentGR.getValue("file_name").split(extensionRegExp);

		if (extension === undefined) {
			gs.addErrorMessage("Resume is not a valid file type.");
			return null;
		}

        return {
            content: attachmentBase64,
            filename: `${filename}-${current.getUniqueValue()}.${extension}`
        };
    }
    return null;
}

function sendFileToAWS(attachment) {
    if (!attachment) {
		gs.addErrorMessage("No attachment found");
        gs.error("No attachment found");
        return;
    }

    const restMessage = new sn_ws.RESTMessageV2();
    restMessage.setEndpoint('https://2j6znuejxl.execute-api.us-east-1.amazonaws.com/prod/receiveFromServiceNow');
    restMessage.setHttpMethod('POST');
    restMessage.setRequestHeader("Content-Type", "application/json");
    restMessage.setRequestBody(JSON.stringify(attachment));

    const response = restMessage.execute();
    const responseBody = response.getBody();
    const httpStatus = response.getStatusCode();

    if (httpStatus !== 200) {
		gs.addErrorMessage("Error sending file to AWS.");
        gs.error('Error sending file to AWS. HTTP Status: ' + httpStatus);
    } else {
		gs.addInfoMessage("File sent successfully!");
        gs.info('File sent successfully. Response: ' + responseBody);
    }
}]]></script>
        <show_insert>false</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-12-05 19:54:40</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>4499247f47767110369ab60e316d435c</sys_id>
        <sys_mod_count>30</sys_mod_count>
        <sys_name>Get Resume Analysis</sys_name>
        <sys_overrides/>
        <sys_package display_value="ResumeAI" source="x_1256160_resumeai">dadfab16473e3110369ab60e316d43e3</sys_package>
        <sys_policy/>
        <sys_scope display_value="ResumeAI">dadfab16473e3110369ab60e316d43e3</sys_scope>
        <sys_update_name>sys_ui_action_4499247f47767110369ab60e316d435c</sys_update_name>
        <sys_updated_by>maxim</sys_updated_by>
        <sys_updated_on>2023-12-13 01:37:51</sys_updated_on>
        <table>x_1256160_resumeai_resume</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>false</ui16_compatible>
    </sys_ui_action>
</record_update>
